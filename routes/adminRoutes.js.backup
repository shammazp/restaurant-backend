const express = require('express');
const router = express.Router();
const Restaurant = require('../models/Restaurant');

// Home page with sidebar navigation
router.get('/', async (req, res) => {
  try {
    // Fetch basic stats
    const totalRestaurants = await Restaurant.countDocuments();
    const activeRestaurants = await Restaurant.countDocuments({ isActive: true });
    
  res.send(`
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Restaurant Admin</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
            background: #ffffff;
            color: #1d1d1f;
            display: flex;
            min-height: 100vh;
        }
        
        .sidebar {
            width: 280px;
            background: #f5f5f7;
            border-right: 1px solid #e5e5e7;
            padding: 0;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
        }
        
        .sidebar-header {
            padding: 24px 20px;
            border-bottom: 1px solid #e5e5e7;
        }
        
        .sidebar-header h1 {
            font-size: 20px;
            font-weight: 600;
            color: #1d1d1f;
        }
        
        .sidebar-nav {
            padding: 20px 0;
        }
        
        .nav-item {
            display: block;
            padding: 12px 20px;
            color: #1d1d1f;
            text-decoration: none;
            font-size: 16px;
            font-weight: 400;
            transition: background-color 0.2s;
            border: none;
            background: none;
            width: 100%;
            text-align: left;
            cursor: pointer;
        }
        
        .nav-item:hover {
            background: #e8e8ed;
        }
        
        .nav-item.active {
            background: #007aff;
            color: white;
        }
        
        .main-content {
            flex: 1;
            margin-left: 280px;
            padding: 40px;
            max-width: 1200px;
        }
        
        .welcome-section {
            margin-bottom: 40px;
        }
        
        .welcome-section h1 {
            font-size: 32px;
            font-weight: 600;
            color: #1d1d1f;
            margin-bottom: 8px;
        }
        
        .welcome-section p {
            font-size: 18px;
            color: #86868b;
            font-weight: 400;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }
        
        .stat-card {
            background: #ffffff;
            border: 1px solid #e5e5e7;
            border-radius: 12px;
            padding: 24px;
            text-align: center;
        }
        
        .stat-card h3 {
            font-size: 32px;
            font-weight: 600;
            color: #1d1d1f;
            margin-bottom: 8px;
        }
        
        .stat-card p {
            font-size: 16px;
            color: #86868b;
            font-weight: 400;
        }
        
        .page {
            display: none;
        }
        
        .page.active {
            display: block;
        }
        
        .restaurants-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }
        
        .restaurant-card {
            background: #ffffff;
            border: 1px solid #e5e5e7;
            border-radius: 12px;
            padding: 24px;
            transition: box-shadow 0.2s;
        }
        
        .restaurant-card:hover {
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        
        .restaurant-card h3 {
            font-size: 20px;
            font-weight: 600;
            color: #1d1d1f;
            margin-bottom: 12px;
        }
        
        .restaurant-card p {
            color: #86868b;
            margin-bottom: 8px;
            font-size: 14px;
            line-height: 1.4;
        }
        
        .restaurant-card .label {
            font-weight: 500;
            color: #1d1d1f;
        }
        
        .cuisine-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 6px;
            margin: 12px 0;
        }
        
        .cuisine-tag {
            background: #f5f5f7;
            color: #1d1d1f;
            padding: 4px 12px;
            border-radius: 16px;
            font-size: 12px;
            font-weight: 500;
        }
        
        .features-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 6px;
            margin: 12px 0;
        }
        
        .feature-tag {
            background: #007aff;
            color: white;
            padding: 4px 12px;
            border-radius: 16px;
            font-size: 12px;
            font-weight: 500;
        }
        
        .status {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 16px;
            font-size: 12px;
            font-weight: 500;
        }
        
        .status.active {
            background: #d1f2eb;
            color: #00a86b;
        }
        
        .status.inactive {
            background: #f8d7da;
            color: #dc3545;
        }
        
        .form-section {
            background: #ffffff;
            border: 1px solid #e5e5e7;
            border-radius: 12px;
            padding: 32px;
            max-width: 600px;
        }
        
        .form-group {
            margin-bottom: 24px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #1d1d1f;
            font-size: 14px;
        }
        
        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 12px 16px;
            border: 1px solid #e5e5e7;
            border-radius: 8px;
            font-size: 16px;
            background: #ffffff;
            color: #1d1d1f;
            transition: border-color 0.2s;
        }
        
        .form-group input:focus,
        .form-group textarea:focus,
        .form-group select:focus {
            outline: none;
            border-color: #007aff;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 16px;
        }
        
        .btn {
            background: #007aff;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        
        .btn:hover {
            background: #0056b3;
        }
        
        .btn-secondary {
            background: #f5f5f7;
            color: #1d1d1f;
        }
        
        .btn-secondary:hover {
            background: #e8e8ed;
        }
        
        .no-restaurants {
            text-align: center;
            padding: 60px 20px;
            color: #86868b;
            font-size: 16px;
        }
        
        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                position: relative;
                height: auto;
            }
            
            .main-content {
                margin-left: 0;
                padding: 20px;
            }
            
            .form-row {
                grid-template-columns: 1fr;
            }
            
            .restaurants-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <div class="sidebar-header">
            <h1>Restaurant Admin</h1>
        </div>
        <nav class="sidebar-nav">
            <button class="nav-item active" data-page="home">üè† Dashboard</button>
            <button class="nav-item" data-page="restaurants">üìã View Restaurants</button>
            <button class="nav-item" data-page="add-restaurant">‚ûï Add Restaurant</button>
        </nav>
    </div>
    
    <div class="main-content">
        <!-- Home Page -->
        <div id="home" class="page active">
            <div class="welcome-section">
                    <h1>Welcome to Restaurant Admin</h1>
                    <p>Manage your restaurants with ease</p>
            </div>
            
            <div class="stats-grid">
                        <div class="stat-card">
                    <h3>${totalRestaurants}</h3>
                            <p>Total Restaurants</p>
                        </div>
                        <div class="stat-card">
                    <h3>${activeRestaurants}</h3>
                            <p>Active Restaurants</p>
                </div>
                </div>
            </div>
            
            <!-- View Restaurants Page -->
            <div id="restaurants" class="page">
            <div class="welcome-section">
                <h1>Restaurants</h1>
                <p>View and manage your restaurant listings</p>
            </div>
                <div id="restaurantsList">
                <div class="no-restaurants">Loading restaurants...</div>
            </div>
            </div>
            
            <!-- Add Restaurant Page -->
            <div id="add-restaurant" class="page">
            <div class="welcome-section">
                <h1>Add Restaurant</h1>
                <p>Create a new restaurant listing</p>
            </div>
            <div class="form-section">
                <div id="message"></div>
                <form id="restaurantForm">
                    <div class="form-row">
                        <div class="form-group">
                            <label for="name">Restaurant Name *</label>
                            <input type="text" id="name" name="name" required>
                        </div>
                        <div class="form-group">
                            <label for="cuisine">Cuisine Type *</label>
                            <select id="cuisine" name="cuisine" multiple required>
                                <option value="Italian">Italian</option>
                                <option value="Chinese">Chinese</option>
                                <option value="Mexican">Mexican</option>
                                <option value="Indian">Indian</option>
                                <option value="Thai">Thai</option>
                                <option value="Japanese">Japanese</option>
                                <option value="American">American</option>
                                <option value="Mediterranean">Mediterranean</option>
                                <option value="French">French</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="description">Description *</label>
                        <textarea id="description" name="description" rows="3" required></textarea>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="street">Street Address *</label>
                            <input type="text" id="street" name="street" required>
                        </div>
                        <div class="form-group">
                            <label for="city">City *</label>
                            <input type="text" id="city" name="city" required>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="state">State *</label>
                            <input type="text" id="state" name="state" required>
                        </div>
                        <div class="form-group">
                            <label for="zipCode">ZIP Code *</label>
                            <input type="text" id="zipCode" name="zipCode" required>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="phone">Phone Number *</label>
                            <input type="tel" id="phone" name="phone" required>
                        </div>
                        <div class="form-group">
                            <label for="email">Email *</label>
                            <input type="email" id="email" name="email" required>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="website">Website</label>
                        <input type="url" id="website" name="website" placeholder="https://example.com">
                    </div>
                    
                    <div class="form-group">
                        <label for="features">Features</label>
                        <select id="features" name="features" multiple>
                            <option value="Delivery">Delivery</option>
                            <option value="Takeout">Takeout</option>
                            <option value="Dine-in">Dine-in</option>
                            <option value="Outdoor Seating">Outdoor Seating</option>
                            <option value="Parking">Parking</option>
                            <option value="WiFi">WiFi</option>
                            <option value="Bar">Bar</option>
                            <option value="Live Music">Live Music</option>
                            <option value="Private Dining">Private Dining</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="logo">Restaurant Logo</label>
                        <input type="file" id="logo" name="logo" accept="image/jpeg,image/jpg,image/png,image/webp">
                        <small style="color: #86868b; font-size: 12px; margin-top: 4px; display: block;">
                            Supported formats: JPEG, PNG, WebP. Max size: 5MB
                        </small>
                    </div>
                    
                    <button type="submit" class="btn">Create Restaurant</button>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Navigation
        function showPage(pageId) {
            // Hide all pages
            document.querySelectorAll('.page').forEach(page => {
                page.classList.remove('active');
            });
            
            // Remove active class from all buttons
            document.querySelectorAll('.nav-item').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // Show selected page
            document.getElementById(pageId).classList.add('active');
            
            // Add active class to clicked button
            document.querySelector('[data-page="' + pageId + '"]').classList.add('active');
            
            // Load data for specific pages
            if (pageId === 'restaurants') {
                loadRestaurants();
            }
        }

        // Load restaurants
        async function loadRestaurants() {
            const container = document.getElementById('restaurantsList');
            container.innerHTML = '<div class="no-restaurants">Loading restaurants...</div>';
            
            try {
                const apiUrl = window.location.protocol + '//' + window.location.host + '/api/restaurants';
                console.log('Fetching restaurants from:', apiUrl);
                
                const response = await fetch(apiUrl);
                console.log('Response status:', response.status);
                console.log('Response ok:', response.ok);
                
                if (!response.ok) {
                    throw new Error('HTTP ' + response.status + ': ' + response.statusText);
                }
                
                const data = await response.json();
                console.log('Response data:', data);
                
                if (data.status === 'success') {
                    console.log('Restaurants found:', data.data.restaurants.length);
                    displayRestaurants(data.data.restaurants);
                } else {
                    console.error('API returned error status:', data);
                    container.innerHTML = '<div class="no-restaurants">API Error: ' + (data.message || 'Unknown error') + '</div>';
                }
            } catch (error) {
                console.error('Error loading restaurants:', error);
                container.innerHTML = '<div class="no-restaurants">Error loading restaurants: ' + error.message + '</div>';
            }
        }

        // Display restaurants
        function displayRestaurants(restaurants) {
            console.log('Displaying restaurants:', restaurants);
            const container = document.getElementById('restaurantsList');
            
            if (!restaurants || restaurants.length === 0) {
                container.innerHTML = '<div class="no-restaurants">No restaurants found</div>';
                return;
            }
            
            try {
                container.innerHTML = \`
                    <div class="restaurants-grid">
                        \${restaurants.map(restaurant => \`
                            <div class="restaurant-card">
                                \${restaurant.logo && restaurant.logo.url ? \`
                                    <div style="text-align: center; margin-bottom: 16px;">
                                        <img src="\${restaurant.logo.url}" alt="Restaurant Logo" style="max-width: 100px; max-height: 100px; border-radius: 8px; object-fit: cover;">
                                    </div>
                                \` : ''}
                                <h3>\${restaurant.name || 'Unnamed Restaurant'}</h3>
                                <p><span class="label">Business ID:</span> \${restaurant.biz_id || 'No business ID'}</p>
                                <p><span class="label">Description:</span> \${restaurant.description || 'No description'}</p>
                                <p><span class="label">Address:</span> \${restaurant.address ? (restaurant.address.street + ', ' + restaurant.address.city + ', ' + restaurant.address.state + ' ' + restaurant.address.zipCode) : 'No address'}</p>
                                <p><span class="label">Phone:</span> \${restaurant.contact ? restaurant.contact.phone : 'No phone'}</p>
                                <p><span class="label">Email:</span> \${restaurant.contact ? restaurant.contact.email : 'No email'}</p>
                                \${restaurant.contact && restaurant.contact.website ? \`<p><span class="label">Website:</span> <a href="\${restaurant.contact.website}" target="_blank">\${restaurant.contact.website}</a></p>\` : ''}
                                <div class="cuisine-tags">
                                    \${restaurant.cuisine && restaurant.cuisine.length > 0 ? restaurant.cuisine.map(cuisine => \`<span class="cuisine-tag">\${cuisine}</span>\`).join('') : '<span class="cuisine-tag">No cuisine specified</span>'}
                                </div>
                                \${restaurant.features && restaurant.features.length > 0 ? \`
                                    <div class="features-tags">
                                        \${restaurant.features.map(feature => \`<span class="feature-tag">\${feature}</span>\`).join('')}
                                    </div>
                                \` : ''}
                                <p><span class="label">Rating:</span> \${restaurant.rating || 0}/5</p>
                                <p><span class="label">Status:</span> <span class="status \${restaurant.isActive ? 'active' : 'inactive'}">\${restaurant.isActive ? 'Active' : 'Inactive'}</span></p>
                            </div>
                        \`).join('')}
                    </div>
                \`;
                console.log('Restaurants displayed successfully');
            } catch (error) {
                console.error('Error displaying restaurants:', error);
                container.innerHTML = '<div class="no-restaurants">Error displaying restaurants: ' + error.message + '</div>';
            }
        }

        // Show message
        function showMessage(text, type) {
            const messageDiv = document.getElementById('message');
            messageDiv.className = 'message ' + type;
            messageDiv.textContent = text;
            messageDiv.style.padding = '12px 16px';
            messageDiv.style.borderRadius = '8px';
            messageDiv.style.marginBottom = '20px';
            messageDiv.style.fontSize = '14px';
            messageDiv.style.fontWeight = '500';
            
            if (type === 'success') {
                messageDiv.style.background = '#d1f2eb';
                messageDiv.style.color = '#00a86b';
                messageDiv.style.border = '1px solid #a8e6cf';
            } else {
                messageDiv.style.background = '#f8d7da';
                messageDiv.style.color = '#dc3545';
                messageDiv.style.border = '1px solid #f5c6cb';
            }
            
            setTimeout(() => {
                messageDiv.textContent = '';
                messageDiv.className = '';
                messageDiv.style.cssText = '';
            }, 5000);
        }

        // Handle form submission
        document.addEventListener('DOMContentLoaded', function() {
            // Navigation event listeners
            document.querySelectorAll('.nav-item').forEach(btn => {
                btn.addEventListener('click', function() {
                    const pageId = this.getAttribute('data-page');
                    showPage(pageId);
                });
            });
            
            // Form submission
            const form = document.getElementById('restaurantForm');
            if (form) {
                form.addEventListener('submit', async function(e) {
                    e.preventDefault();
                    
                    const formData = new FormData(this);
                    
                    // Check if logo file is selected
                    const logoFile = formData.get('logo');
                    if (logoFile && logoFile.size > 0) {
                        // If logo is selected, upload it first
                        try {
                            const logoFormData = new FormData();
                            logoFormData.append('logo', logoFile);
                            logoFormData.append('biz_id', formData.get('biz_id'));
                            
                            const logoResponse = await fetch('/api/restaurants/biz/' + formData.get('biz_id') + '/logo', {
                                method: 'POST',
                                body: logoFormData
                            });
                            
                            if (!logoResponse.ok) {
                                const logoError = await logoResponse.json();
                                throw new Error('Logo upload failed: ' + (logoError.message || 'Unknown error'));
                            }
                        } catch (error) {
                            console.error('Logo upload error:', error);
                            showMessage('Logo upload failed: ' + error.message, 'error');
                            return;
                        }
                    }
                    
                    const restaurantData = {
                        biz_id: formData.get('biz_id'),
                        name: formData.get('name'),
                        description: formData.get('description'),
                        address: {
                            street: formData.get('street'),
                            city: formData.get('city'),
                            state: formData.get('state'),
                            zipCode: formData.get('zipCode'),
                            country: 'USA'
                        },
                        contact: {
                            phone: formData.get('phone'),
                            email: formData.get('email'),
                            website: formData.get('website')
                        },
                        cuisine: Array.from(document.getElementById('cuisine').selectedOptions).map(option => option.value),
                        features: Array.from(document.getElementById('features').selectedOptions).map(option => option.value),
                        owner: '507f1f77bcf86cd799439011'
                    };
                    
                    try {
                        const apiUrl = window.location.protocol + '//' + window.location.host + '/api/restaurants';
                        console.log('Submitting restaurant to:', apiUrl);
                        console.log('Restaurant data:', restaurantData);
                        
                        const response = await fetch(apiUrl, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(restaurantData)
                        });
                        
                        console.log('Form response status:', response.status);
                        console.log('Form response ok:', response.ok);
                        
                        const result = await response.json();
                        console.log('Form response data:', result);
                        
                        if (response.ok) {
                            showMessage('Restaurant created successfully!', 'success');
                            this.reset();
                        } else {
                            showMessage('Error: ' + (result.message || 'Unknown error'), 'error');
                        }
                    } catch (error) {
                        console.error('Form submission error:', error);
                        showMessage('Error: ' + error.message, 'error');
                    }
                });
            }
        });
    </script>
</body>
</html>
  `);
  } catch (error) {
    console.error('Error loading admin page:', error);
    res.status(500).send(`
      <!DOCTYPE html>
      <html>
      <head>
        <title>Error - Restaurant Admin</title>
        <style>
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif; padding: 50px; text-align: center; }
          .error { color: #dc3545; background: #f8d7da; padding: 20px; border-radius: 8px; }
        </style>
      </head>
      <body>
        <div class="error">
          <h1>Error Loading Admin Page</h1>
          <p>There was an error loading the admin page. Please try again later.</p>
        </div>
      </body>
      </html>
    `);
  }
});

module.exports = router;